invApp.service("DBService", function($http){
    
    // to fetch data from firebase servers
    this.fetch = function( url, floatingMsg, callback ){
        
        // to display floating message
        floatingMsg.isVisible = true;
        // to display error in floating message
        if(!navigator.onLine){
            floatingMsg.error = true;
        }
    
        var baseUrl = 'https://collegesportsinventory.firebaseio.com';
        var ref = new Firebase( baseUrl + url );

        console.log("fetching....");
        
        // Attach an asynchronous callback to read the data at our posts reference
        ref.on("value", function(snapshot) {
            console.log("received following object", snapshot.val());
            callback(snapshot.val());
        }, function (errorObject) {
            console.log( "The read failed: " + errorObject.code );
        });
        
    };
    
    // to push object into path
    this.push = function( url, obj, callback ){
        var baseUrl = 'https://collegesportsinventory.firebaseio.com';
        var ref = new Firebase( baseUrl + url );
        
        // Get the unique ID generated by push()
        var newPushRef = ref.push(obj);
        var pushID = newPushRef.key();
        
        console.log( obj, "was pushed into " + url + " with ID " + pushID );
        
        callback(pushID);
    };
    
    // to set object in a path
    this.set = function( url, obj, callback ){
        var baseUrl = 'https://collegesportsinventory.firebaseio.com';
        var ref = new Firebase( baseUrl + url );
        ref.set(obj);
        
        console.log( obj, "was set at " + url );
        
        callback();
    };
    
    this.update = function( url, obj, callback ){
        var baseUrl = 'https://collegesportsinventory.firebaseio.com';
        var ref = new Firebase( baseUrl + url );
        ref.update(obj);
        
        console.log( obj, "was pdated at " + url );
        
        callback();
    };
    
});
